@inject AuthorService AuthorService
@inject NavigationManager NavigationManager

@using LibraryWeb.Models
@using LibraryWeb.Services

@page "/authors/{id:long}"

@code {
    [Parameter]
    public long Id { get; set; }

    private Author Author { get; set; } = new Author();

    protected override async Task OnInitializedAsync()
    {
        Author = await AuthorService.GetAuthorByIdAsync(Id);
    }
}

<h1>Author Details</h1>

<div class="row">
  <div class="col-md-6">
    <p><strong>Name:</strong> @Author.Name</p>
  </div>
  <div class="col-md-6">
    <p><strong>Surname:</strong> @Author.Surname</p>
  </div>
</div>

<div class="row">
  <div class="col-md-12">
    <a class="btn btn-primary" @onclick="@(() => NavigationManager.NavigateTo($"/authors/{Author.Id}/edit", forceLoad: false))">Edit</a>
    <a class="btn btn-danger" @onclick="@(() => NavigationManager.NavigateTo($"/authors/{Author.Id}/delete", forceLoad: false))">Delete</a>
  </div>
</div>

<h3>Books by @Author.Name @Author.Surname</h3>

@if (Author.Books?.Any() ?? false) 
{
      <table class="table table-bordered table-hover">
        <thead>
          <tr>
            <th>Title</th>
            <th>Genre</th>
          </tr>
        </thead>
        <tbody>
            @foreach (var book in Author.Books)
            {
              <tr>
                <td>@book.Title</td>
                <td>@book.Genre</td>
              </tr>
            }
        </tbody>
      </table>
}
else
{
      <p>This author has no books yet.</p>
}
